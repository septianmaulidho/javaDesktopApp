/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Papa Isam
 */
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.*;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

public class Manajemen_Stok extends javax.swing.JFrame {
    
    private DefaultTableModel mdl = new DefaultTableModel(){
        boolean[] canEdit = new boolean []{false,false,true,true,true,true,false};
        public boolean isCellEditable(int row, int column) {
            return canEdit[column];
        }
    };
    
    private DefaultTableModel mdl2 = new DefaultTableModel(){
        
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    /**
     * Creates new form Manajemen_Stok
     */
    public Manajemen_Stok() {
        initComponents();
        mdl.addColumn("No");
        mdl.addColumn("Kode Barang");
        mdl.addColumn("Nama Barang");
        mdl.addColumn("Modal/item");
        mdl.addColumn("Harga");
        mdl.addColumn("Stok");
        mdl.addColumn("Stok Minimal");
        mdl.addColumn("Penjualan");
        jTable1.setModel(mdl);
        mdl2.addColumn("No");
        mdl2.addColumn("Kode Kedatangan Barang");
        mdl2.addColumn("Tanggal Datang");
        mdl2.addColumn("Tanggal Diinput");
        mdl2.addColumn("Kode Barang");
        mdl2.addColumn("Nama Barang");
        mdl2.addColumn("Kuantiti Datang");
        mdl2.addColumn("Harga Beli");
        mdl2.addColumn("Keterangan");
        jTable2.setModel(mdl2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        tmb_cari = new javax.swing.JButton();
        txtkey = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        tmbctk_stok = new javax.swing.JButton();
        tmbsimpan_update = new javax.swing.JButton();
        tmb_hapus = new javax.swing.JButton();
        tmb_hpspenca = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtkd_brgUp = new javax.swing.JTextField();
        txtnm_brgUp = new javax.swing.JTextField();
        tgl_datang = new com.toedter.calendar.JDateChooser();
        txtqty_dtg = new javax.swing.JTextField();
        txtstok_minUp = new javax.swing.JTextField();
        lbl_stok = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txthrg_beli = new javax.swing.JTextField();
        txthrg_jualperitem = new javax.swing.JTextField();
        txtketerangan = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        tmb_simpanUp = new javax.swing.JButton();
        tmb_bersihkanUp = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        tmb_bersihkan = new javax.swing.JButton();
        tmb_simpan = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtstok_min = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtstok = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txthrg = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtnm_brg = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtkd_brg = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        modal = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        awal_tanggal = new com.toedter.calendar.JDateChooser();
        jLabel24 = new javax.swing.JLabel();
        sampai_tanggal = new com.toedter.calendar.JDateChooser();
        jLabel25 = new javax.swing.JLabel();
        txt_key = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        Cetak_lapIncoming = new javax.swing.JButton();
        Hapus = new javax.swing.JButton();
        Hapus_laporan = new javax.swing.JButton();
        Cetak_lapIncoming3 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        tmb_cari1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1350, 700));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Input Data Barang Masuk");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Kode Barang");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Quantity");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Stok Minimum");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 28)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Manajemen Stok Barang TB. Rizky Putra");
        jLabel11.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Nama Barang");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel13.setText("Kunci Pencarian");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel14.setText("Pencarian menggunakan");

        jComboBox1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Kode Barang", "Nama Barang", "Stok Minimum" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        tmb_cari.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tmb_cari.setText("Cari");
        tmb_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmb_cariActionPerformed(evt);
            }
        });

        txtkey.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtkey.setPreferredSize(new java.awt.Dimension(6, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        tmbctk_stok.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tmbctk_stok.setText("Cetak Stok Total");
        tmbctk_stok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmbctk_stokActionPerformed(evt);
            }
        });

        tmbsimpan_update.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tmbsimpan_update.setText("Simpan");
        tmbsimpan_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmbsimpan_updateActionPerformed(evt);
            }
        });

        tmb_hapus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tmb_hapus.setText("Hapus");
        tmb_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmb_hapusActionPerformed(evt);
            }
        });

        tmb_hpspenca.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tmb_hpspenca.setText("Bersihkan Pencarian");
        tmb_hpspenca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmb_hpspencaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Pencarian Barang / Stok Barang");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtkey, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(tmb_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tmbsimpan_update, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(tmb_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(tmb_hpspenca)
                .addGap(52, 52, 52)
                .addComponent(tmbctk_stok)
                .addGap(42, 42, 42))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtkey, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(tmb_cari))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tmbsimpan_update)
                    .addComponent(tmb_hapus)
                    .addComponent(tmbctk_stok)
                    .addComponent(tmb_hpspenca))
                .addGap(107, 107, 107))
        );

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Harga Beli");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Harga jual/item");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Keterangan");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Tanggal Datang");

        txtkd_brgUp.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtkd_brgUp.setPreferredSize(new java.awt.Dimension(6, 30));
        txtkd_brgUp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtkd_brgUpFocusLost(evt);
            }
        });
        txtkd_brgUp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtkd_brgUpKeyPressed(evt);
            }
        });

        txtnm_brgUp.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtnm_brgUp.setPreferredSize(new java.awt.Dimension(6, 30));
        txtnm_brgUp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnm_brgUpKeyPressed(evt);
            }
        });

        txtqty_dtg.setPreferredSize(new java.awt.Dimension(6, 30));
        txtqty_dtg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtqty_dtgFocusLost(evt);
            }
        });
        txtqty_dtg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtqty_dtgActionPerformed(evt);
            }
        });
        txtqty_dtg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtqty_dtgKeyPressed(evt);
            }
        });

        txtstok_minUp.setPreferredSize(new java.awt.Dimension(6, 30));
        txtstok_minUp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtstok_minUpFocusLost(evt);
            }
        });
        txtstok_minUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtstok_minUpActionPerformed(evt);
            }
        });
        txtstok_minUp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtstok_minUpKeyPressed(evt);
            }
        });

        lbl_stok.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_stok.setText("0");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Stok Saat Ini");

        txthrg_beli.setPreferredSize(new java.awt.Dimension(6, 30));
        txthrg_beli.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txthrg_beliFocusLost(evt);
            }
        });
        txthrg_beli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txthrg_beliActionPerformed(evt);
            }
        });
        txthrg_beli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txthrg_beliKeyPressed(evt);
            }
        });

        txthrg_jualperitem.setPreferredSize(new java.awt.Dimension(6, 30));
        txthrg_jualperitem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txthrg_jualperitemFocusLost(evt);
            }
        });
        txthrg_jualperitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txthrg_jualperitemActionPerformed(evt);
            }
        });
        txthrg_jualperitem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txthrg_jualperitemKeyPressed(evt);
            }
        });

        txtketerangan.setPreferredSize(new java.awt.Dimension(6, 30));
        txtketerangan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtketeranganActionPerformed(evt);
            }
        });
        txtketerangan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtketeranganKeyPressed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Rp ");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Rp ");

        tmb_simpanUp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tmb_simpanUp.setText("Simpan");
        tmb_simpanUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmb_simpanUpActionPerformed(evt);
            }
        });

        tmb_bersihkanUp.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tmb_bersihkanUp.setText("Batal");
        tmb_bersihkanUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmb_bersihkanUpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtkd_brgUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tgl_datang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtnm_brgUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtqty_dtg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtketerangan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtstok_minUp, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_stok, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 12, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txthrg_jualperitem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txthrg_beli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(tmb_simpanUp)
                .addGap(88, 88, 88)
                .addComponent(tmb_bersihkanUp, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtkd_brgUp, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtnm_brgUp, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tgl_datang, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtqty_dtg, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtstok_minUp, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(lbl_stok))
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txthrg_beli, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txthrg_jualperitem, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtketerangan, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tmb_simpanUp)
                    .addComponent(tmb_bersihkanUp))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        tmb_bersihkan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tmb_bersihkan.setText("Batal");
        tmb_bersihkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmb_bersihkanActionPerformed(evt);
            }
        });

        tmb_simpan.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tmb_simpan.setText("Simpan");
        tmb_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmb_simpanActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Stok Minimum");

        txtstok_min.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtstok_min.setPreferredSize(new java.awt.Dimension(6, 30));
        txtstok_min.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtstok_minFocusLost(evt);
            }
        });
        txtstok_min.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtstok_minActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Stok");

        txtstok.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtstok.setPreferredSize(new java.awt.Dimension(6, 30));
        txtstok.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtstokFocusLost(evt);
            }
        });
        txtstok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtstokActionPerformed(evt);
            }
        });
        txtstok.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtstokKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Harga Jual");

        txthrg.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txthrg.setPreferredSize(new java.awt.Dimension(6, 30));
        txthrg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txthrgFocusLost(evt);
            }
        });
        txthrg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txthrgKeyPressed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Nama Barang");

        txtnm_brg.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtnm_brg.setPreferredSize(new java.awt.Dimension(6, 30));
        txtnm_brg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnm_brgActionPerformed(evt);
            }
        });
        txtnm_brg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnm_brgKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Kode Barang");

        txtkd_brg.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtkd_brg.setPreferredSize(new java.awt.Dimension(4, 30));
        txtkd_brg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtkd_brgFocusLost(evt);
            }
        });
        txtkd_brg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtkd_brgActionPerformed(evt);
            }
        });
        txtkd_brg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtkd_brgKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Input Master Barang Baru");

        modal.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        modal.setPreferredSize(new java.awt.Dimension(6, 30));
        modal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                modalFocusLost(evt);
            }
        });
        modal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modalActionPerformed(evt);
            }
        });
        modal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                modalKeyPressed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setText("Harga beli/item");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(jLabel15)
                                            .addGap(4, 4, 4))
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel27))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txthrg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtstok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtstok_min, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(modal, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtkd_brg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtnm_brg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(tmb_simpan)
                        .addGap(72, 72, 72)
                        .addComponent(tmb_bersihkan, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(153, 153, 153))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtkd_brg, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtnm_brg, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txthrg, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtstok, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtstok_min, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tmb_bersihkan)
                    .addComponent(tmb_simpan))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel28.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("Laporan Riwayat Kedatangan Barang");

        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel23.setText("Tanggal Datang");

        awal_tanggal.setDateFormatString("dd MMM, yyyy");
        awal_tanggal.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel24.setText("Sampai Tanggal");

        sampai_tanggal.setDateFormatString("dd MMM, yyyy");
        sampai_tanggal.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel25.setText("Kunci Pencarian");

        txt_key.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jComboBox2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Semua Barang", "Kode Barang", "Nama Barang" }));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        Cetak_lapIncoming.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Cetak_lapIncoming.setText("Cetak Laporan");
        Cetak_lapIncoming.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cetak_lapIncomingActionPerformed(evt);
            }
        });

        Hapus.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Hapus.setText("Hapus Data");
        Hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HapusActionPerformed(evt);
            }
        });

        Hapus_laporan.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Hapus_laporan.setText("Hapus Laporan");
        Hapus_laporan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hapus_laporanActionPerformed(evt);
            }
        });

        Cetak_lapIncoming3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Cetak_lapIncoming3.setText("Bersihkan Pencarian");
        Cetak_lapIncoming3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cetak_lapIncoming3ActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel26.setText("Dari tanggal");

        tmb_cari1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tmb_cari1.setText("Cari");
        tmb_cari1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmb_cari1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addComponent(jLabel23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(txt_key)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(awal_tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sampai_tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(tmb_cari1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 222, Short.MAX_VALUE)
                .addComponent(Cetak_lapIncoming, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(Hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(Hapus_laporan, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(Cetak_lapIncoming3)
                .addGap(60, 60, 60))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(txt_key, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2)
                    .addComponent(tmb_cari1))
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(awal_tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sampai_tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel23)
                        .addComponent(jLabel26))
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cetak_lapIncoming3)
                    .addComponent(Hapus_laporan)
                    .addComponent(Hapus)
                    .addComponent(Cetak_lapIncoming))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel18))
                                .addGap(8, 8, 8)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel20)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel16)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel17)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel18))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(446, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtstokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtstokActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtstokActionPerformed

    private void txtstok_minActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtstok_minActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtstok_minActionPerformed

    private void tmb_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmb_simpanActionPerformed
        // TODO add your handling code here:
        if(cek_kdbarang(txtkd_brg.getText().trim())==0&&cek_nmbrg(txtnm_brg.getText().trim())==0){
            try{
            String pen_awal = "0";
            Class.forName(JDBC_DRIVER);
            Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
            Statement smt = cn.createStatement();
            int a = smt.executeUpdate("INSERT INTO barang (Kd_brg,Nm_brg,Harga,Stok,Stok_Min,Penjualan,modal) values"
                    + " ('"+txtkd_brg.getText().trim()+"','"+txtnm_brg.getText().trim()+"','"+txthrg.getText().trim()+"',"
                    + "'"+txtstok.getText().trim()+"','"+txtstok_min.getText().trim()+"','"+pen_awal+"','"+modal.getText().trim()+"')");
            if(a>0){
            JOptionPane.showMessageDialog(this,"Kode Barang \t : " +txtkd_brg.getText()+
                    "\nNama Barang \t : "+txtnm_brg.getText()+
                    "\nHarga \t : "+txthrg.getText()+
                    "\nStok \t : "+txtstok.getText()+                    
                    "\nStok Minimal \t : "+txtstok_min.getText(),"Penyimpanan Data Barang Berhasil",JOptionPane.INFORMATION_MESSAGE);
            }
            else
                JOptionPane.showMessageDialog(this,"Silahkan ulangi penyimpanan barang!","Penyimpanan Data Tidak Berhasil",JOptionPane.INFORMATION_MESSAGE);
            bersihkan();
                  
            }catch (Exception e){
                e.printStackTrace();
            }
        }
        else{
            JOptionPane.showMessageDialog(this,"Kode barang atau Nama barang sudah ada","Informasi",JOptionPane.INFORMATION_MESSAGE); 
            bersihkan();
        }
       
        
    }//GEN-LAST:event_tmb_simpanActionPerformed

    private void txtkd_brgKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtkd_brgKeyPressed
        // TODO add your handling code here:
         int a = 0;
        
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            a = cek_kdbarang(txtkd_brg.getText());
            if(a==0){
            txtnm_brg.requestFocus();
            }
            else{
                JOptionPane.showMessageDialog(this,"Data sudah ada","Informasi",JOptionPane.INFORMATION_MESSAGE);
                txtkd_brg.setText("");
            }
        }
    }//GEN-LAST:event_txtkd_brgKeyPressed

    private void txtnm_brgKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnm_brgKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            if(cek_nmbrg(txtnm_brg.getText().trim())>0){
                JOptionPane.showMessageDialog(this,"Data Sudah Ada!","Informasi",JOptionPane.INFORMATION_MESSAGE);
                txtnm_brg.setText("");
            }
            else
                modal.requestFocus();
        }
    }//GEN-LAST:event_txtnm_brgKeyPressed

    private void txthrgKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txthrgKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtstok.requestFocus();
        }
    }//GEN-LAST:event_txthrgKeyPressed

    private void txtstokKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtstokKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtstok_min.requestFocus();
        }
    }//GEN-LAST:event_txtstokKeyPressed

    private void tmb_bersihkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmb_bersihkanActionPerformed
        // TODO add your handling code here:
        bersihkan();
    }//GEN-LAST:event_tmb_bersihkanActionPerformed

    private void txtkd_brgUpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtkd_brgUpKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            int a = 0;
        try{
            Class.forName(JDBC_DRIVER);
            Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
            Statement smt = cn.createStatement();
            ResultSet rs = smt.executeQuery("select * from barang where Kd_brg = '" + txtkd_brgUp.getText() +"'");
            rs.next();
            a = rs.getRow();
            if(a>0){
                txtstok_minUp.setText(rs.getString("Stok_min"));
                txtnm_brgUp.setText(rs.getString("nm_brg"));
                lbl_stok.setText(rs.getString("Stok"));
                txthrg_jualperitem.setText(rs.getString("Harga"));
                txtqty_dtg.requestFocus();
            }
            else{
                JOptionPane.showMessageDialog(this, "Data belum ada di database, Data akan disimpan sebagai Master Baru!","Informasi",JOptionPane.INFORMATION_MESSAGE);
            }
        }catch (Exception e){
            e.printStackTrace();
        }
            
        }
       
    }//GEN-LAST:event_txtkd_brgUpKeyPressed

    private void txtqty_dtgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtqty_dtgActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtqty_dtgActionPerformed

    private void txtqty_dtgKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtqty_dtgKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtstok_minUp.requestFocus();
        }
    }//GEN-LAST:event_txtqty_dtgKeyPressed

    private void tmb_simpanUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmb_simpanUpActionPerformed
          // TODO add your handling code here:
            try{
                Class.forName(JDBC_DRIVER);
                Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
                Statement smt = cn.createStatement();
                ResultSet rs = smt.executeQuery("select * from barang where Kd_brg = '" + txtkd_brgUp.getText() +"'");
                rs.next();
                if(rs.getRow()>0){
                    int a = Update_brg(Double.parseDouble(rs.getString("Stok")));
                    int b = Update_brgdtg();
                    if(a>0 && b>0)
                        JOptionPane.showMessageDialog(this,"Data telah disimpan!","Informasi",JOptionPane.INFORMATION_MESSAGE);
                }
                else{
                    String pesan = "Tidak ada master barang ditemukan, apakah akan disimpan dalam master barang baru?";
                    int result = JOptionPane.showConfirmDialog(null,pesan,"Confirmation Message",JOptionPane.YES_NO_OPTION);
                    
                    int a = createmaster_brg();
                    int b = Update_brgdtg();
                    if(a>0 && b>0)
                        JOptionPane.showMessageDialog(this,"Data telah disimpan!","Informasi",JOptionPane.INFORMATION_MESSAGE);
                }
            }catch (Exception e){
                e.printStackTrace();
            }
        
            bersihkan_Up();
        
    }//GEN-LAST:event_tmb_simpanUpActionPerformed

    private void tmb_bersihkanUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmb_bersihkanUpActionPerformed
        // TODO add your handling code here:
        bersihkan_Up();
    }//GEN-LAST:event_tmb_bersihkanUpActionPerformed

    private void txtkd_brgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtkd_brgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtkd_brgActionPerformed

    private void txtstok_minUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtstok_minUpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtstok_minUpActionPerformed

    private void txtstok_minUpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtstok_minUpKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==KeyEvent.VK_ENTER)
            txthrg_beli.requestFocus();
    }//GEN-LAST:event_txtstok_minUpKeyPressed

    private void txtnm_brgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnm_brgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnm_brgActionPerformed

    private void txtnm_brgUpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnm_brgUpKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==KeyEvent.VK_ENTER)
            tgl_datang.requestFocus();
    }//GEN-LAST:event_txtnm_brgUpKeyPressed

    private void tmb_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmb_cariActionPerformed
        // TODO add your handling code here:
        int i=1;
        bersihkan_Table();
        String pil = jComboBox1.getSelectedItem().toString();
        if(pil.equals("Kode Barang")){
            try{
                Class.forName(JDBC_DRIVER);
                Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
                Statement smt = cn.createStatement();
                ResultSet rs = smt.executeQuery("select * from barang where Kd_brg = '" + txtkey.getText().trim() +"'");
                while(rs.next()){
                    mdl.addRow(new Object [] {i,rs.getString("Kd_brg"),rs.getString("Nm_brg"),rs.getString("modal"),rs.getString("Harga")
                        ,rs.getString("Stok"),rs.getString("Stok_min"),rs.getString("Penjualan")});
                    i++;
            }
            rs.last();
            if(rs.getRow()==0)
            JOptionPane.showMessageDialog(this,"Tidak Ada Data Ditemukan !","Informasi",JOptionPane.INFORMATION_MESSAGE);
            jTable1.setModel(mdl);
            rs.close();
            smt.close();
            cn.close();
        }catch (Exception e){
            e.printStackTrace();
        }
        }
        else if(pil.equals("Nama Barang")){
            try{
                Class.forName(JDBC_DRIVER);
                Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
                Statement smt = cn.createStatement();
                ResultSet rs = smt.executeQuery("select * from barang where Nm_brg like '%" + txtkey.getText() +"%'");
                while(rs.next()){
                    mdl.addRow(new Object [] {i,rs.getString("Kd_brg"),rs.getString("Nm_brg"),rs.getString("modal"),rs.getString("Harga")
                        ,rs.getString("Stok"),rs.getString("Stok_min"),rs.getString("Penjualan")});
                    i++;
            }
            rs.last();
            if(rs.getRow()==0)
            JOptionPane.showMessageDialog(this,"Tidak Ada Data Ditemukan !","Informasi",JOptionPane.INFORMATION_MESSAGE);
            jTable1.setModel(mdl);
            rs.close();
            smt.close();
            cn.close();
        } catch (Exception e){
            e.printStackTrace();
        }
        }
        else {
            try{
                Class.forName(JDBC_DRIVER);
                Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
                Statement smt = cn.createStatement();
                ResultSet rs = smt.executeQuery("select * from barang where Stok <= Stok_min order by Nm_brg");
                while(rs.next()){
                    mdl.addRow(new Object [] {i,rs.getString("Kd_brg"),rs.getString("Nm_brg"),rs.getString("modal"),rs.getString("Harga")
                        ,rs.getString("Stok"),rs.getString("Stok_min"),rs.getString("Penjualan"),rs.getString("Penjualan")});
                    i++;
            }
            rs.last();
            if(rs.getRow()==0)
            JOptionPane.showMessageDialog(this,"Tidak Ada Data Ditemukan !","Informasi",JOptionPane.INFORMATION_MESSAGE);
            jTable1.setModel(mdl);
            rs.close();
            smt.close();
            cn.close();
        } catch (Exception e){
            e.printStackTrace();
        }
        }
        txtkey.setText("");
    }//GEN-LAST:event_tmb_cariActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void tmb_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmb_hapusActionPerformed
        // TODO add your handling code here:
        int x = jTable1.getSelectedRow();
        Date ys = new Date();
        SimpleDateFormat dt = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat dt2 = new SimpleDateFormat("kk:mm:ss");
        String tgl = dt.format(ys);
        String wkt = dt2.format(ys);
        if(x>=0){
         String pesan = "Anda yakin menghapus Master Barang:\nKode Barang \t : " +jTable1.getModel().getValueAt(x,1).toString()+
                    "\nNama Barang \t : "+jTable1.getModel().getValueAt(x,2).toString();
       
       int result = JOptionPane.showConfirmDialog(null,pesan,"Confirmation Message",JOptionPane.YES_NO_OPTION);
       if(result == JOptionPane.YES_OPTION){
        try{
            Class.forName(JDBC_DRIVER);
            Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
            Statement smt = cn.createStatement();
            smt.executeUpdate("delete from barang where Kd_brg = '"+jTable1.getModel().getValueAt(x,1)+"' ");
            smt.executeUpdate("insert into log_hapus (Tgl_hapus,Jam_hapus,Data_dihapus) values"
                              +"('"+tgl+"','"+wkt+"','"+"Hapus Master Barang Kode Barang: "
                              +jTable1.getModel().getValueAt(x,1).toString()+" Nama Barang :"
                              +jTable1.getModel().getValueAt(x,2).toString()+"')");
            smt.close();
            mdl.removeRow(x);
            jTable1.setModel(mdl);
        }catch (Exception e){
                e.printStackTrace();
        }
       }
      }
        else
            JOptionPane.showMessageDialog(this,"Tidak ada Item yang dipilih!","Informasi",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_tmb_hapusActionPerformed

    private void tmbsimpan_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmbsimpan_updateActionPerformed
        // TODO add your handling code here:
         Date ys = new Date();
        SimpleDateFormat dt = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat dt2 = new SimpleDateFormat("kk:mm:ss");
        String tgl = dt.format(ys);
        String wkt = dt2.format(ys);
        String pesan_hps = get_pesanhps();
        int x = jTable1.getSelectedRow();
        if(x>=0){
         String pesan = "Anda yakin menyimpan perubahan:\nKode Barang \t : " +jTable1.getModel().getValueAt(x,1).toString()+
                    "\nNama Barang \t : "+jTable1.getModel().getValueAt(x,2).toString();
       
       int result = JOptionPane.showConfirmDialog(null,pesan,"Confirmation Message",JOptionPane.YES_NO_OPTION);
       if(result == JOptionPane.YES_OPTION){
        String kd_brg = jTable1.getModel().getValueAt(x,1).toString().trim();
        String nm_brg = jTable1.getModel().getValueAt(x,2).toString().trim();
        String modal = jTable1.getModel().getValueAt(x,3).toString().trim();
        String hrg = jTable1.getModel().getValueAt(x,4).toString().trim();
        String stok = jTable1.getModel().getValueAt(x,5).toString().trim();
        String stok_min = jTable1.getModel().getValueAt(x,6).toString().trim();
        String sql = "UPDATE barang SET Nm_brg = '"+nm_brg+"',modal = '"+modal+"',Harga = '"+hrg+"',Stok = '"+stok+"',Stok_min='"+stok_min+"' where Kd_brg = '"+kd_brg+"'";
        
        try{
                Class.forName(JDBC_DRIVER);
                Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
                Statement smt = cn.createStatement();
                int a = smt.executeUpdate(sql);
                if(a>0){
                    smt.executeUpdate("insert into log_hapus (Tgl_hapus,Jam_hapus,Data_dihapus) values"
                              +"('"+tgl+"','"+wkt+"','"+pesan_hps+"')");
                    JOptionPane.showMessageDialog(this,"Perubahan Berhasil Disimpan","Informasi",JOptionPane.INFORMATION_MESSAGE);
                }
                smt.close();
                
            }catch (Exception e){
                e.printStackTrace();
            }
       }
    }
        else
           JOptionPane.showMessageDialog(this,"Tidak ada Item yang dipilih!","Informasi",JOptionPane.INFORMATION_MESSAGE); 
    }//GEN-LAST:event_tmbsimpan_updateActionPerformed

    private void tmbctk_stokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmbctk_stokActionPerformed
        // TODO add your handling code here:
        try{
            Class.forName(JDBC_DRIVER);
            Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
            JasperDesign jdesign = JRXmlLoader.load("src/stok_total.jrxml");
            String query = "select* from barang order by nm_brg";
            JRDesignQuery updateQuery = new JRDesignQuery();
            updateQuery.setText(query);
            jdesign.setQuery(updateQuery);
            JasperReport jreport = JasperCompileManager.compileReport(jdesign);
            JasperPrint jprint = JasperFillManager.fillReport(jreport,null,cn);
            JasperViewer.viewReport(jprint,false);
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,"Data tidak dapat dicetak! \n"+e.getMessage(), "Cetak Data",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tmbctk_stokActionPerformed

    private void tmb_hpspencaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmb_hpspencaActionPerformed
        // TODO add your handling code here:
        bersihkan_Table();
    }//GEN-LAST:event_tmb_hpspencaActionPerformed

    private void txthrg_beliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txthrg_beliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txthrg_beliActionPerformed

    private void txthrg_beliKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txthrg_beliKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==KeyEvent.VK_ENTER)
            txthrg_jualperitem.requestFocus();
    }//GEN-LAST:event_txthrg_beliKeyPressed

    private void txthrg_jualperitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txthrg_jualperitemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txthrg_jualperitemActionPerformed

    private void txthrg_jualperitemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txthrg_jualperitemKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()==KeyEvent.VK_ENTER)
            txtketerangan.requestFocus();
    }//GEN-LAST:event_txthrg_jualperitemKeyPressed

    private void txtketeranganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtketeranganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtketeranganActionPerformed

    private void txtketeranganKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtketeranganKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtketeranganKeyPressed

    private void tmb_cari1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmb_cari1ActionPerformed
        // TODO add your handling code here:
        bersihkan_Table2();
        SimpleDateFormat dt = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat dt2 = new SimpleDateFormat("dd/MM/yyyy");
        String sql;
        String pil = jComboBox2.getSelectedItem().toString();
        
        switch(pil){
            case "Semua Barang":
                sql = "select * from incoming where Tgl_datang between '"+String.valueOf(dt.format(awal_tanggal.getDate()))+"' AND '"+String.valueOf(dt.format(sampai_tanggal.getDate()))+"' ORDER by Tgl_datang asc";
                ket_hapus = "data kedatangan dari tanggal: "+dt2.format(awal_tanggal.getDate())+" sampai tanggal: "+dt2.format(sampai_tanggal.getDate());
                break;
            case "Kode Barang":
                sql = "select * from incoming where Kd_brg = '"+txt_key.getText()+"' AND Tgl_datang between '"+dt.format(awal_tanggal.getDate())+"' AND '"+dt.format(sampai_tanggal.getDate())+"' ORDER by Tgl_datang asc";
                ket_hapus = "data kedatatangan barang Kode Barang: "+txt_key.getText()+" dari tanggal: "+dt2.format(awal_tanggal.getDate())+" sampai tanggal: "+dt2.format(sampai_tanggal.getDate());
                break;
            default:
                sql = "select * from incoming where Nm_brg like '%"+txt_key.getText()+"%' AND Tgl_datang between '"+dt.format(awal_tanggal.getDate())+"' AND '"+dt.format(sampai_tanggal.getDate())+"' ORDER by Tgl_datang asc";
                ket_hapus = "data kedatatangan barang Nama Barang: "+txt_key.getText()+" dari tanggal: "+dt2.format(awal_tanggal.getDate())+" sampai tanggal: "+dt2.format(sampai_tanggal.getDate());
                break;
        }
        create_tableincoming(sql);
        txt_key.setText("");
        awal_tanggal.setCalendar(null);
        sampai_tanggal.setCalendar(null);
    }//GEN-LAST:event_tmb_cari1ActionPerformed

    private void Cetak_lapIncoming3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cetak_lapIncoming3ActionPerformed
        // TODO add your handling code here:
        bersihkan_Table2();
    }//GEN-LAST:event_Cetak_lapIncoming3ActionPerformed

    private void Cetak_lapIncomingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cetak_lapIncomingActionPerformed
        // TODO add your handling code here:
        if(jTable2.getRowCount()>0){    
            try{
                HashMap parameter = new HashMap();
                File file = new File("src/Incoming_Report1.jasper");
                parameter.put("jenis",ket_hapus);
                JasperReport jp = (JasperReport) JRLoader.loadObject(file);
                JasperPrint jasperPrint = JasperFillManager.fillReport(jp,parameter,new JRTableModelDataSource(mdl2));
                JasperViewer.viewReport(jasperPrint,false);
                JasperViewer.setDefaultLookAndFeelDecorated(true);
            }catch (Exception e){
                JOptionPane.showMessageDialog(null,"Data tidak dapat dicetak!"+e.getMessage(),"Informasi",JOptionPane.ERROR_MESSAGE);
            }
        }
        else
            JOptionPane.showMessageDialog(this,"Tidak ada data dicetak!","Informasi",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_Cetak_lapIncomingActionPerformed

    private void HapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HapusActionPerformed
        // TODO add your handling code here:
        int col = jTable2.getSelectedRow();
        Date ys = new Date();
         SimpleDateFormat dt = new SimpleDateFormat("yyyy-MM-dd");
         SimpleDateFormat dt2 = new SimpleDateFormat("kk:mm:ss");
         String tgl = dt.format(ys);
         String wkt = dt2.format(ys);
         String pesan = "Anda yakin menghapus data kedatangan barang Kode Barang : " +jTable2.getModel().getValueAt(col,4).toString()
                        +", Nama Barang : "+jTable2.getModel().getValueAt(col,5).toString()+", kedatangan tanggal: "+jTable2.getModel().getValueAt(col,2).toString();
         int result = JOptionPane.showConfirmDialog(null,pesan,"Confirmation Message",JOptionPane.YES_NO_OPTION);
         if(result == JOptionPane.YES_OPTION){
            try{
                Class.forName(JDBC_DRIVER);
                Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
                Statement smt = cn.createStatement();
                ResultSet rs = smt.executeQuery("select * from barang where Kd_brg = '" +jTable2.getModel().getValueAt(col,4).toString()+"'");
                rs.next();
                int stok_br = Integer.parseInt(rs.getString("Stok"))-Integer.parseInt(jTable2.getModel().getValueAt(col,6).toString());
                smt.executeUpdate("UPDATE barang SET Stok = '"+stok_br+"' where Kd_brg = '"+jTable2.getModel().getValueAt(col,4).toString()+"'");
                smt.executeUpdate("delete from incoming where No_incoming = '"+jTable2.getModel().getValueAt(col,1).toString()+"'");
                smt.executeUpdate("insert into log_hapus (Tgl_hapus,Jam_hapus,Data_dihapus) values"
                              +"('"+tgl+"','"+wkt+"','"+"Hapus data kedatangan barang Kode Barang: "+jTable2.getModel().getValueAt(col,4).toString()+
                              ", Nama Barang : "+jTable2.getModel().getValueAt(col,5).toString()+", Tanggal kedatangan :"+jTable2.getModel().getValueAt(col,2).toString()+"')");
                mdl2.removeRow(col);
                rs.close();
                smt.close();
                cn.close();
            }catch (Exception e){
                e.printStackTrace();
                }
         }
    }//GEN-LAST:event_HapusActionPerformed

    private void Hapus_laporanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hapus_laporanActionPerformed
        // TODO add your handling code here:
        int col = jTable2.getRowCount(),i=0;
        Date ys = new Date();
         SimpleDateFormat dt = new SimpleDateFormat("yyyy-MM-dd");
         SimpleDateFormat dt2 = new SimpleDateFormat("kk:mm:ss");
         String tgl = dt.format(ys);
         String wkt = dt2.format(ys);
        if(col>0){
            String pesan = "Anda yakin menghapus "+ket_hapus+"?";
            int result = JOptionPane.showConfirmDialog(null,pesan,"Confirmation Message",JOptionPane.YES_NO_OPTION);
            if(result == JOptionPane.YES_OPTION){
                try{
                    Class.forName(JDBC_DRIVER);
                    Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
                    Statement smt = cn.createStatement();
                    while(i<col){
                        smt.executeUpdate("delete from incoming where No_incoming = '"+jTable2.getModel().getValueAt(i,1).toString()+"'");
                        mdl2.removeRow(i);
                        i++;
                    }
                    smt.executeUpdate("insert into log_hapus (Tgl_hapus,Jam_hapus,Data_dihapus) values"
                            +"('"+tgl+"','"+wkt+"','"+"Hapus "+ket_hapus+"')");
                    smt.close();
                    cn.close();
            }catch (Exception e){
                e.printStackTrace();
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(this,"Tidak ada data di Tabel!","Informasi",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_Hapus_laporanActionPerformed

    private void txthrgFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txthrgFocusLost
        // TODO add your handling code here:
        if(!isNumeric(txthrg.getText().trim())&& !txthrg.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Masukkan data yang sesuai","Informasi",JOptionPane.INFORMATION_MESSAGE);
            txthrg.setText("");
            txthrg.requestFocus();
        }
    }//GEN-LAST:event_txthrgFocusLost

    private void txtstokFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtstokFocusLost
        // TODO add your handling code here:
        if(!isNumeric(txtstok.getText().trim())&& !txtstok.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Masukkan data yang sesuai","Informasi",JOptionPane.INFORMATION_MESSAGE);
            txtstok.setText("");
            txtstok.requestFocus();
        }
    }//GEN-LAST:event_txtstokFocusLost

    private void txtstok_minFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtstok_minFocusLost
        // TODO add your handling code here:
        if(!isNumeric(txtstok_min.getText().trim())&& !txtstok_min.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Masukkan data yang sesuai","Informasi",JOptionPane.INFORMATION_MESSAGE);
            txtstok_min.setText("");
            txtstok_min.requestFocus();
        }
    }//GEN-LAST:event_txtstok_minFocusLost

    private void txtkd_brgFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtkd_brgFocusLost
        // TODO add your handling code here:
         int a = 0;
        
        a = cek_kdbarang(txtkd_brg.getText());
        if(a==0){
            //txtnm_brg.requestFocus();
        }
        else{
             JOptionPane.showMessageDialog(this,"Data sudah ada","Informasi",JOptionPane.INFORMATION_MESSAGE);
             txtkd_brg.setText("");
            }
    }//GEN-LAST:event_txtkd_brgFocusLost

    private void txtkd_brgUpFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtkd_brgUpFocusLost
        // TODO add your handling code here:
         int a = 0;
        try{
            Class.forName(JDBC_DRIVER);
            Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
            Statement smt = cn.createStatement();
            ResultSet rs = smt.executeQuery("select * from barang where Kd_brg = '" + txtkd_brgUp.getText() +"'");
            rs.next();
            a = rs.getRow();
            if(a>0){
                txtstok_minUp.setText(rs.getString("Stok_min"));
                txtnm_brgUp.setText(rs.getString("nm_brg"));
                lbl_stok.setText(rs.getString("Stok"));
                txthrg_jualperitem.setText(rs.getString("Harga"));
            }
            
        }catch (Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtkd_brgUpFocusLost

    private void txtqty_dtgFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtqty_dtgFocusLost
        // TODO add your handling code here:
        if(!isNumeric(txtqty_dtg.getText().trim()) && !txtqty_dtg.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Masukkan data yang sesuai","Informasi",JOptionPane.INFORMATION_MESSAGE);
            txtqty_dtg.setText("");
            txtqty_dtg.requestFocus();
        }
    }//GEN-LAST:event_txtqty_dtgFocusLost

    private void txtstok_minUpFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtstok_minUpFocusLost
        // TODO add your handling code here:
        if(!isNumeric(txtstok_minUp.getText().trim())&& !txtstok_minUp.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Masukkan data yang sesuai","Informasi",JOptionPane.INFORMATION_MESSAGE);
            txtstok_minUp.setText("");
            txtstok_minUp.requestFocus();
        }
    }//GEN-LAST:event_txtstok_minUpFocusLost

    private void txthrg_beliFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txthrg_beliFocusLost
        // TODO add your handling code here:
        if(!isNumeric(txthrg_beli.getText().trim())&& !txthrg_beli.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Masukkan data yang sesuai","Informasi",JOptionPane.INFORMATION_MESSAGE);
            txthrg_beli.setText("");
            txthrg_beli.requestFocus();
        }
    }//GEN-LAST:event_txthrg_beliFocusLost

    private void txthrg_jualperitemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txthrg_jualperitemFocusLost
        // TODO add your handling code here:
         if(!isNumeric(txthrg_jualperitem.getText().trim())&& !txthrg_jualperitem.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Masukkan data yang sesuai","Informasi",JOptionPane.INFORMATION_MESSAGE);
            txthrg_jualperitem.setText("");
            txthrg_jualperitem.requestFocus();
        }
    }//GEN-LAST:event_txthrg_jualperitemFocusLost

    private void modalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modalActionPerformed

    private void modalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_modalKeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            txthrg.requestFocus();
        }
    }//GEN-LAST:event_modalKeyPressed

    private void modalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_modalFocusLost
        // TODO add your handling code here:
        if(!isNumeric(modal.getText().trim())&& !modal.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Masukkan data yang sesuai","Informasi",JOptionPane.INFORMATION_MESSAGE);
            modal.setText("");
            modal.requestFocus();
        }
    }//GEN-LAST:event_modalFocusLost
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Manajemen_Stok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Manajemen_Stok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Manajemen_Stok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Manajemen_Stok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Manajemen_Stok().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cetak_lapIncoming;
    private javax.swing.JButton Cetak_lapIncoming3;
    private javax.swing.JButton Hapus;
    private javax.swing.JButton Hapus_laporan;
    private com.toedter.calendar.JDateChooser awal_tanggal;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lbl_stok;
    private javax.swing.JTextField modal;
    private com.toedter.calendar.JDateChooser sampai_tanggal;
    private com.toedter.calendar.JDateChooser tgl_datang;
    private javax.swing.JButton tmb_bersihkan;
    private javax.swing.JButton tmb_bersihkanUp;
    private javax.swing.JButton tmb_cari;
    private javax.swing.JButton tmb_cari1;
    private javax.swing.JButton tmb_hapus;
    private javax.swing.JButton tmb_hpspenca;
    private javax.swing.JButton tmb_simpan;
    private javax.swing.JButton tmb_simpanUp;
    private javax.swing.JButton tmbctk_stok;
    private javax.swing.JButton tmbsimpan_update;
    private javax.swing.JTextField txt_key;
    private javax.swing.JTextField txthrg;
    private javax.swing.JTextField txthrg_beli;
    private javax.swing.JTextField txthrg_jualperitem;
    private javax.swing.JTextField txtkd_brg;
    private javax.swing.JTextField txtkd_brgUp;
    private javax.swing.JTextField txtketerangan;
    private javax.swing.JTextField txtkey;
    private javax.swing.JTextField txtnm_brg;
    private javax.swing.JTextField txtnm_brgUp;
    private javax.swing.JTextField txtqty_dtg;
    private javax.swing.JTextField txtstok;
    private javax.swing.JTextField txtstok_min;
    private javax.swing.JTextField txtstok_minUp;
    // End of variables declaration//GEN-END:variables

    static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://localhost/TB_RP";
    static final String USER = "root";
    static final String PASS = "";
    String ket_hapus;
    
    public int cek_kdbarang(String kd_brg){
        int a = 0;
        try{
            Class.forName(JDBC_DRIVER);
            Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
            Statement smt = cn.createStatement();
            ResultSet rs = smt.executeQuery("select * from barang where Kd_brg = '" + kd_brg +"'");
            rs.last();
            a = rs.getRow();
        }catch (Exception e){
            e.printStackTrace();
        }
        return a;
    }
    
    public int cek_nmbrg(String nm){
        int a = 0;
        try{
            Class.forName(JDBC_DRIVER);
            Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
            Statement smt = cn.createStatement();
            ResultSet rs = smt.executeQuery("select * from barang where Nm_brg = '" + nm +"'");
            rs.last();
            a = rs.getRow();
        }catch (Exception e){
            e.printStackTrace();
        }
        return a;
    }
    public int Update_brg(double st_lm){
        double st_br = st_lm + Double.parseDouble(txtqty_dtg.getText()),mod_satuan;
        int a =0;
        try{
            Class.forName(JDBC_DRIVER);
            Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
            Statement smt = cn.createStatement();
            mod_satuan=(long) (Long.parseLong(txthrg_beli.getText().trim())/Double.parseDouble(txtqty_dtg.getText().trim()));
            a = smt.executeUpdate("UPDATE barang SET Nm_brg = '"+txtnm_brgUp.getText().trim()+"',Harga ='"+txthrg_jualperitem.getText().trim()+"',modal = '"+mod_satuan+
                    "',Stok ='"+st_br+"',Stok_min='"+txtstok_minUp.getText().trim()+"' where Kd_brg = '"+txtkd_brgUp.getText().trim()+"' ");
            smt.close();
            cn.close();
            return a;
        }catch (Exception e){
            e.printStackTrace();
        }
        return a;
    }
    public void bersihkan(){
        txtkd_brg.setText("");
        txtnm_brg.setText("");
        txthrg.setText("");
        modal.setText("");
        txtstok.setText("");
        txtstok_min.setText("");
        txtkd_brg.requestFocus();
    }
    
    public void bersihkan_Up(){
        txtkd_brgUp.setText("");
        txtqty_dtg.setText("");
        txtstok_minUp.setText("");
        txthrg_beli.setText("");
        txthrg_jualperitem.setText("");
        txtketerangan.setText("");
        txtnm_brgUp.setText("");
        lbl_stok.setText("0");
        tgl_datang.setCalendar(null);
        txtkd_brg.requestFocus();
    }
    public int Update_brgdtg(){
        int a = 0;
        Date ys = new Date();
        SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd");
        String tgl = s.format(ys);
        String No_incoming = creno_incoming();
            
        try{
            Class.forName(JDBC_DRIVER);
            Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
            Statement smt = cn.createStatement();
            a = smt.executeUpdate("INSERT INTO incoming (No_incoming,Tgl_datang,Tgl_input,Kd_brg,Nm_brg,Qty_datang,hrg_beli,Keterangan) values"
                    +"('"+No_incoming+"','"+String.valueOf(s.format(tgl_datang.getDate()))+"','"+tgl+"','"+txtkd_brgUp.getText().trim()+"','"+txtnm_brgUp.getText().trim()+"','"+txtqty_dtg.getText().trim()+"','"
                    +txthrg_beli.getText().trim()+"','"+txtketerangan.getText()+ "')");
            return a;     
        } catch (Exception e){
            e.printStackTrace();
        }
        return a;

    }
    
    public void bersihkan_Table(){
        int j_brs = jTable1.getRowCount()-1;
        int i = j_brs;
        while(i>=0){
            mdl.removeRow(i);
            i=i-1;
        }
    }
    
    public void bersihkan_Table2(){
        int j_brs = jTable2.getRowCount()-1;
        int i = j_brs;
        while(i>=0){
            mdl2.removeRow(i);
            i=i-1;
        }
        
    }
    
    public int createmaster_brg(){
        int a = 0,pen_awal=0;
        long mod_satuan;
        try{
            Class.forName(JDBC_DRIVER);
            Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
            Statement smt = cn.createStatement();
            mod_satuan=(long) (Double.parseDouble(txthrg_beli.getText().trim())/Double.parseDouble(txtqty_dtg.getText().trim()));
            a = smt.executeUpdate("INSERT INTO barang (Kd_brg,Nm_brg,Harga,Stok,Stok_Min,Penjualan,modal) values"
                    + " ('"+txtkd_brgUp.getText().trim()+"','"+txtnm_brgUp.getText().trim()+"','"+txthrg_jualperitem.getText().trim()+"',"
                    + "'"+txtqty_dtg.getText().trim()+"','"+txtstok_minUp.getText().trim()+"','"+pen_awal+"','"+mod_satuan+"')");
            smt.close();
            cn.close();
            }catch (Exception e){
                e.printStackTrace();
            }
        return a;
    }
    
    public String set_Rp(Long bil){
        DecimalFormat kursIndonesia = (DecimalFormat) DecimalFormat.getCurrencyInstance();
        DecimalFormatSymbols formatRp = new DecimalFormatSymbols();

        formatRp.setCurrencySymbol("Rp ");
        formatRp.setMonetaryDecimalSeparator(',');
        formatRp.setGroupingSeparator('.');

        kursIndonesia.setDecimalFormatSymbols(formatRp);
        
        return kursIndonesia.format(bil);
    }
    
    public String get_pesanhps(){
        String pesan ="Perubahan ";
        int col = jTable1.getSelectedRow();
        try{
            Class.forName(JDBC_DRIVER);
            Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
            Statement smt = cn.createStatement();
            ResultSet rs = smt.executeQuery("select * from barang where Kd_brg = '" + jTable1.getModel().getValueAt(col,1) +"'");
            while(rs.next()){
                if(!rs.getString("Nm_brg").equals(jTable1.getModel().getValueAt(col, 2).toString()))
                    pesan = pesan+"nama barang menjadi "+jTable1.getModel().getValueAt(col, 2).toString()+", ";
                if(!rs.getString("modal").equals(jTable1.getModel().getValueAt(col, 3).toString()))
                    pesan = pesan+"modal barang "+rs.getString("Harga")+" menjadi "+jTable1.getModel().getValueAt(col, 3).toString()+", ";
                if(!rs.getString("Harga").equals(jTable1.getModel().getValueAt(col, 4).toString()))
                    pesan = pesan+"harga barang "+rs.getString("Harga")+" menjadi "+jTable1.getModel().getValueAt(col, 3).toString()+", ";
                if(!rs.getString("Stok").equals(jTable1.getModel().getValueAt(col, 5).toString()))
                    pesan = pesan+"stok barang "+rs.getString("Stok")+" menjadi "+jTable1.getModel().getValueAt(col, 4).toString()+", ";
                if(!rs.getString("Stok_min").equals(jTable1.getModel().getValueAt(col, 6).toString()))
                    pesan = pesan+"stok barang "+rs.getString("Stok")+" menjadi "+jTable1.getModel().getValueAt(col, 4).toString()+", ";
            }
        }catch (Exception e){
                e.printStackTrace();
            }
        
        return pesan;
    }
    
    public void create_tableincoming(String sql){
        SimpleDateFormat dt = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat dt2 = new SimpleDateFormat("dd/MM/yyyy");
        int i=1;
        try{
            Class.forName(JDBC_DRIVER);
            Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
            Statement smt = cn.createStatement();
            ResultSet rs = smt.executeQuery(sql);
            while(rs.next()){
                Date d1 = dt.parse(rs.getString("Tgl_datang"));
                Date d2 = dt.parse(rs.getString("Tgl_input"));
                mdl2.addRow(new Object [] {i,rs.getString("No_incoming"),dt2.format(d1),dt2.format(d2),rs.getString("Kd_brg"),
                    rs.getString("Nm_brg"),rs.getString("qty_datang"),set_Rp(Long.parseLong(rs.getString("hrg_beli"))),rs.getString("Keterangan")});
                i++;
            }
            jTable2.setModel(mdl2);
            rs.last();
            if(rs.getRow()==0)
                JOptionPane.showMessageDialog(this,"Tidak ada data ditemukan!","Informasi",JOptionPane.INFORMATION_MESSAGE);
            rs.close();
            smt.close();
            cn.close();
        }catch (Exception e){
                e.printStackTrace();
            }
    }
    
    public String creno_incoming(){
        String no_in = "KB";
        
        Date ys = new Date();
        SimpleDateFormat s = new SimpleDateFormat("yyyyMMdd");
        no_in = no_in.concat(s.format(ys)).concat(no_urut(s.format(ys)));
        return no_in;
    }
    
    public String no_urut(String tgl){
        int no;
        try{
                Class.forName(JDBC_DRIVER);
                Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
                Statement smt = cn.createStatement();
                ResultSet rs = smt.executeQuery("select * from incoming where No_incoming like '%" + tgl +"%' order by No_incoming asc");
                rs.last();
                if(rs.getRow()==0)
                    no = 1;
                else
                    no=Integer.parseInt(rs.getString("No_incoming").substring(10,13))+1;
                
                if(no<10)
                    return "00".concat(String.valueOf(no));
                else if(no>=10&&no<100)
                    return "0".concat(String.valueOf(no));
                else
                    return String.valueOf(no);
            } catch (Exception e){
                e.printStackTrace();
                return null;
            }
    }
    public static boolean isNumeric(String strNum) {
        if (strNum == null) {
            return false;
        }
        try {
            double d = Double.parseDouble(strNum);
        } catch (NumberFormatException nfe) {
            return false;
            }
        return true;
    }
    
}
