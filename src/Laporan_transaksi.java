
import java.io.File;
import java.sql.*;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Papa Isam
 */
public class Laporan_transaksi extends javax.swing.JFrame {
    
    private DefaultTableModel mdl = new DefaultTableModel(){
        
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    /**
     * Creates new form Laporan_transaksi
     */
    public Laporan_transaksi() {
        initComponents();
        mdl.addColumn("No.");
        mdl.addColumn("No. Transaksi");
        mdl.addColumn("Tanggal Transaksi");
        mdl.addColumn("Jam Transaksi");
        mdl.addColumn("Sub Total");
        mdl.addColumn("Diskon");
        mdl.addColumn("Total");
        mdl.addColumn("Cara Bayar");
        mdl.addColumn("Tunai");
        mdl.addColumn("Deposit");
        mdl.addColumn("Piutang");
        
        jTable1.setModel(mdl);
        total_trans.setText("Rp 0,00");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        awal_tanggal = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        sampai_tanggal = new com.toedter.calendar.JDateChooser();
        tmb_cari = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        tmb_tranhari = new javax.swing.JButton();
        btl_trans = new javax.swing.JButton();
        tmb_ceknota = new javax.swing.JButton();
        btl_cetak = new javax.swing.JButton();
        btl_cetak1 = new javax.swing.JButton();
        Hps_pencarian = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        total_trans = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbl_piutang = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbl_deposit = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbl_tunai = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1350, 700));

        awal_tanggal.setDateFormatString("dd MMM, yyyy");
        awal_tanggal.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Dari Tanggal");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Sampai Tanggal");

        sampai_tanggal.setDateFormatString("dd MMM, yyyy");
        sampai_tanggal.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        tmb_cari.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tmb_cari.setText("Cari");
        tmb_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmb_cariActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("LAPORAN TRANSAKSI TB. RIZKY PUTRA");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        tmb_tranhari.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tmb_tranhari.setText("Transaksi Harian");
        tmb_tranhari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmb_tranhariActionPerformed(evt);
            }
        });

        btl_trans.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btl_trans.setText("Batalkan Transaksi");
        btl_trans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btl_transActionPerformed(evt);
            }
        });

        tmb_ceknota.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tmb_ceknota.setText("Cek Nota");
        tmb_ceknota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tmb_ceknotaActionPerformed(evt);
            }
        });

        btl_cetak.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btl_cetak.setText("Cetak Laporan");
        btl_cetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btl_cetakActionPerformed(evt);
            }
        });

        btl_cetak1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btl_cetak1.setText("Hapus Data Transaksi");
        btl_cetak1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btl_cetak1ActionPerformed(evt);
            }
        });

        Hps_pencarian.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Hps_pencarian.setText("Hapus Pencarian");
        Hps_pencarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hps_pencarianActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Total Transaksi");

        total_trans.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        total_trans.setText("Rp 0");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Transaksi Piutang");

        lbl_piutang.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_piutang.setText("Rp 0");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Transaksi Deposit");

        lbl_deposit.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_deposit.setText("Rp 0");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Transaksi Tunai");

        lbl_tunai.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_tunai.setText("Rp 0");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setText(":");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setText(":");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel10.setText(":");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setText(":");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_tunai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_deposit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_piutang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(total_trans, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lbl_tunai)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lbl_deposit)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lbl_piutang)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(total_trans)
                    .addComponent(jLabel11))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(awal_tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(jLabel2)
                .addGap(47, 47, 47)
                .addComponent(sampai_tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(tmb_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(tmb_tranhari)
                .addGap(210, 210, 210))
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(tmb_ceknota, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btl_trans)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btl_cetak)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btl_cetak1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Hps_pencarian)
                .addGap(104, 104, 104)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(sampai_tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(awal_tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tmb_cari)
                                .addComponent(tmb_tranhari)))
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(52, 52, 52))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btl_trans)
                            .addComponent(tmb_ceknota)
                            .addComponent(btl_cetak)
                            .addComponent(btl_cetak1)
                            .addComponent(Hps_pencarian))
                        .addGap(106, 106, 106))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tmb_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmb_cariActionPerformed
        // TODO add your handling code here:
         tampil_table();
         
    }//GEN-LAST:event_tmb_cariActionPerformed

    private void tmb_tranhariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmb_tranhariActionPerformed
        // TODO add your handling code here:
        Date ys = new Date();
        SimpleDateFormat s = new SimpleDateFormat("yyyyMMdd");
      //  s.format(ys);
        awal_tanggal.setDate(ys);
        sampai_tanggal.setDate(ys);
        tampil_table();
    }//GEN-LAST:event_tmb_tranhariActionPerformed

    private void btl_transActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btl_transActionPerformed
        // TODO add your handling code here:
        Date ys = new Date();
         SimpleDateFormat dt = new SimpleDateFormat("yyyy-MM-dd");
         SimpleDateFormat dt2 = new SimpleDateFormat("kk:mm:ss");
         String tgl = dt.format(ys);
         String wkt = dt2.format(ys);
        int col = jTable1.getSelectedRow();
        if(col>=0){
            String pesan = "Anda yakin membatalkan transaksi " +jTable1.getModel().getValueAt(col,1).toString();
            int result = JOptionPane.showConfirmDialog(null,pesan,"Confirmation Message",JOptionPane.YES_NO_OPTION);
            if(result == JOptionPane.YES_OPTION){
                 try{
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection cn = DriverManager.getConnection("jdbc:mysql:"+"///tb_rp","root","" );
                    Statement smt = cn.createStatement();
                    ResultSet rs = smt.executeQuery("select * from nota where No_trans = '"+jTable1.getModel().getValueAt(col,1)+"'");
                    rs.next();
                    if(rs.getString("Jenis_pembayaran").equals("Deposit")||rs.getString("Jenis_pembayaran").equals("Deposit dan Tunai")){
                        Update_salde(rs.getString("no_deposit"),rs.getString("deposit"));
                        Update_stoknPen();
                        mdl.removeRow(col);
                    }
                    else if(rs.getString("Jenis_pembayaran").equals("Piutang")){
                        if(cek_piutang(rs.getString("no_piutang"))==0){
                            String pesan_hps = "Hapus piutang No. Piutang: "+rs.getString("no_piutang")+", nama: "+get_name(rs.getString("no_piutang"));
                            smt.executeUpdate("delete from piutang where no_piutang='"+rs.getString("no_piutang")+"'");
                            smt.executeUpdate("insert into log_hapus (Tgl_hapus,Jam_hapus,Data_dihapus) values"
                              +"('"+tgl+"','"+wkt+"','"+pesan_hps+"')");
                            Update_stoknPen();
                            mdl.removeRow(col);
                        }
                    }
                    else if(rs.getString("Jenis_pembayaran").equals("Deposit dan Piutang")){
                        if(cek_piutang(rs.getString("no_piutang"))==0){
                            Update_salde(rs.getString("no_deposit"),rs.getString("deposit"));
                            String pesan_hps = "Hapus piutang No. Piutang: "+rs.getString("no_piutang")+", nama: "+get_name(rs.getString("no_piutang"));
                            smt.executeUpdate("delete from piutang where no_piutang='"+rs.getString("no_piutang")+"'");
                            smt.executeUpdate("insert into log_hapus (Tgl_hapus,Jam_hapus,Data_dihapus) values"
                              +"('"+tgl+"','"+wkt+"','"+pesan_hps+"')");
                            Update_stoknPen();
                            mdl.removeRow(col);
                        }
                    }
                    else{
                        Update_stoknPen();
                        mdl.removeRow(col);
                    }
                tampil_table();
                } catch (Exception e){
                e.printStackTrace();
                } 
            }
        }
        else
            JOptionPane.showMessageDialog(this,"Tidak ada Item yang dipilih!","Informasi",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btl_transActionPerformed

    private void tmb_ceknotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tmb_ceknotaActionPerformed
        // TODO add your handling code here:
        int col = jTable1.getSelectedRow();
        if(col>=0){
        String no_tr = jTable1.getModel().getValueAt(col,1).toString(),tgl_jth="-",sisal="-";
        if(jTable1.getModel().getValueAt(col,7).equals("Deposit"))
            sisal=set_Rp(get_sisal(no_tr));
        else if(jTable1.getModel().getValueAt(col,7).equals("Deposit dan Tunai"))
            sisal=set_Rp(get_sisal(no_tr));
        else if(jTable1.getModel().getValueAt(col,7).equals("Deposit dan Piutang")){
            sisal=set_Rp(get_sisal(no_tr));
            tgl_jth=get_tgljt(no_tr);
        }
        else if(jTable1.getModel().getValueAt(col,7).equals("Deposit dan Piutang"))
            tgl_jth=get_tgljt(no_tr);
        try{
            HashMap parameter = new HashMap();
            Class.forName("com.mysql.jdbc.Driver");
            Connection cn = DriverManager.getConnection("jdbc:mysql:"+"///tb_rp","root","" );
            Statement smt = cn.createStatement();
            ResultSet rs = smt.executeQuery("select * from nota where No_trans = '"+no_tr+"'");
            rs.next();
            JasperDesign jdesign = JRXmlLoader.load("src/nota.jrxml");
                parameter.put("No_trans",no_tr);
                parameter.put("Grand_total",set_Rp(Long.parseLong(rs.getString("Sub_total"))));
                parameter.put("Diskon",set_Rp(Long.parseLong(rs.getString("Diskon"))));
                parameter.put("Total",set_Rp(Long.parseLong(rs.getString("Total"))));
                parameter.put("cr_byr","Transaksi "+jTable1.getModel().getValueAt(col,7));
                parameter.put("tot_cash",jTable1.getModel().getValueAt(col,8));
                parameter.put("tot_dep",jTable1.getModel().getValueAt(col,9));
                parameter.put("tot_pi",jTable1.getModel().getValueAt(col,10));
                parameter.put("jth_tempo",tgl_jth);
                parameter.put("sisa_saldo",sisal);
                String query = "select* from transaksi where no_trans = '"+no_tr+"'";
                JRDesignQuery updateQuery = new JRDesignQuery();
                updateQuery.setText(query);
                jdesign.setQuery(updateQuery);
                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                JasperPrint jprint = JasperFillManager.fillReport(jreport,parameter,cn);
                JasperViewer.viewReport(jprint,false);
        } catch (Exception e){
            JOptionPane.showMessageDialog(null,"Data tidak dapat dicetak! \n"+e.getMessage(), "Cetak Data",JOptionPane.ERROR_MESSAGE);
        }
     }
        else
            JOptionPane.showMessageDialog(this,"Tidak ada Item yang dipilih!","Informasi",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_tmb_ceknotaActionPerformed

    private void btl_cetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btl_cetakActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat dt = new SimpleDateFormat("dd/MM/yyyy");
        try{
            HashMap parameter = new HashMap();
            File file = new File("src/Laporan_Transaksi.jasper");
            parameter.put("dr_tgl",String.valueOf(dt.format(awal_tanggal.getDate())));
            parameter.put("smp_tgl",String.valueOf(dt.format(sampai_tanggal.getDate())));
            parameter.put("tunai",set_Rp(tot_cash));
            parameter.put("deposit",set_Rp(tot_deposit));
            parameter.put("piutang",set_Rp(tot_piutang));
            parameter.put("total",set_Rp(tot_om));
            JasperReport jp = (JasperReport) JRLoader.loadObject(file);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jp,parameter,new JRTableModelDataSource(mdl));
            JasperViewer.viewReport(jasperPrint,false);
            JasperViewer.setDefaultLookAndFeelDecorated(true);
        } catch (Exception e){
            JOptionPane.showMessageDialog(null,"Data tidak dapat dicetak! \n"+e.getMessage(), "Cetak Data",JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btl_cetakActionPerformed

    private void btl_cetak1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btl_cetak1ActionPerformed
        // TODO add your handling code here:
        Date ys = new Date();
        SimpleDateFormat dt = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat dt2 = new SimpleDateFormat("dd-MM-yyyy");
        SimpleDateFormat dt3 = new SimpleDateFormat("kk:mm:ss");
        String tgl = dt.format(ys),wkt=dt3.format(ys);
        String pesan = "Anda yakin menghapus data transaksi dari tanggal " +String.valueOf(dt2.format(awal_tanggal.getDate()))+" sampai tanggal "+String.valueOf(dt2.format(sampai_tanggal.getDate()))+"?";
        int result = JOptionPane.showConfirmDialog(null,pesan,"Confirmation Message",JOptionPane.YES_NO_OPTION);
        if(result == JOptionPane.YES_OPTION){
            try{
                Class.forName(JDBC_DRIVER);
                Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
                Statement smt = cn.createStatement();
                smt.executeUpdate("delete from transaksi where Tgl_trans between '" + String.valueOf(dt.format(awal_tanggal.getDate()))+"' AND '"+String.valueOf(dt.format(sampai_tanggal.getDate()))+"'");
                smt.executeUpdate("delete from nota where Tgl_trans between '" + String.valueOf(dt.format(awal_tanggal.getDate()))+"' AND '"+String.valueOf(dt.format(sampai_tanggal.getDate()))+"'");
                smt.executeUpdate("insert into log_hapus (Tgl_hapus,Jam_hapus,Data_dihapus) values"
                              +"('"+tgl+"','"+wkt+"','"+"Hapus data transaksi dari tanggal "+String.valueOf(dt.format(awal_tanggal.getDate()))+" sampai tanggal "+String.valueOf(dt.format(sampai_tanggal.getDate()))+"')");
                bersihkan_Table();
                smt.close();
                cn.close();
            }catch (Exception e){
            JOptionPane.showMessageDialog(null,"Data tidak dapat dicetak! \n"+e.getMessage(), "Cetak Data",JOptionPane.ERROR_MESSAGE);
        }
                
        }
    }//GEN-LAST:event_btl_cetak1ActionPerformed

    private void Hps_pencarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hps_pencarianActionPerformed
        // TODO add your handling code here:
        bersihkan_Table();
        awal_tanggal.setCalendar(null);
        sampai_tanggal.setCalendar(null);
    }//GEN-LAST:event_Hps_pencarianActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Laporan_transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Laporan_transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Laporan_transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Laporan_transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Laporan_transaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Hps_pencarian;
    private com.toedter.calendar.JDateChooser awal_tanggal;
    private javax.swing.JButton btl_cetak;
    private javax.swing.JButton btl_cetak1;
    private javax.swing.JButton btl_trans;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbl_deposit;
    private javax.swing.JLabel lbl_piutang;
    private javax.swing.JLabel lbl_tunai;
    private com.toedter.calendar.JDateChooser sampai_tanggal;
    private javax.swing.JButton tmb_cari;
    private javax.swing.JButton tmb_ceknota;
    private javax.swing.JButton tmb_tranhari;
    private javax.swing.JLabel total_trans;
    // End of variables declaration//GEN-END:variables
    
    static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://localhost/TB_RP";
    static final String USER = "root";
    static final String PASS = "";
    public long tot_om;
    public long tot_cash;
    public long tot_deposit;
    public long tot_piutang;
    
    public void tampil_table(){
        bersihkan_Table();
        SimpleDateFormat dt = new SimpleDateFormat("yyyy-MM-dd");     
        int i=1;
        try{
                Class.forName(JDBC_DRIVER);
                Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
                Statement smt = cn.createStatement();
                ResultSet rs = smt.executeQuery("select * from nota where Tgl_trans between '" + String.valueOf(dt.format(awal_tanggal.getDate()))+"' AND '"+String.valueOf(dt.format(sampai_tanggal.getDate()))+"'");
                tot_om=0;tot_cash=0;tot_piutang=0;
                while(rs.next()){
                    mdl.addRow(new Object [] {i,rs.getString("No_trans"),rs.getString("Tgl_trans"),rs.getString("Wkt_trans")
                            ,set_Rp(Long.parseLong(rs.getString("Sub_total"))),set_Rp(Long.parseLong(rs.getString("Diskon"))),set_Rp(Long.parseLong(rs.getString("Total"))),rs.getString("Jenis_pembayaran"),set_Rp(Long.parseLong(rs.getString("cash"))),set_Rp(Long.parseLong(rs.getString("Deposit"))),set_Rp(Long.parseLong(rs.getString("Piutang")))});
                    tot_om += Long.parseLong(rs.getString("Total"));
                    tot_cash += Long.parseLong(rs.getString("cash"));
                    tot_deposit += Long.parseLong(rs.getString("deposit"));
                    tot_piutang += Long.parseLong(rs.getString("piutang"));
                    i++;
                }
                rs.last();
                if(rs.getRow()==0)
                      JOptionPane.showMessageDialog(this,"Tidak Ada Data Ditemukan!","Informasi",JOptionPane.INFORMATION_MESSAGE);
                jTable1.setModel(mdl);
                total_trans.setText(set_Rp(tot_om));
                lbl_tunai.setText(set_Rp(tot_cash));
                lbl_deposit.setText(set_Rp(tot_deposit));
                lbl_piutang.setText(set_Rp(tot_piutang));
                    rs.close();
                    smt.close();
                    cn.close();
        } catch (Exception e){
                e.printStackTrace();
            } 
    }
    
     public String set_Rp(Long bil){
        DecimalFormat kursIndonesia = (DecimalFormat) DecimalFormat.getCurrencyInstance();
        DecimalFormatSymbols formatRp = new DecimalFormatSymbols();

        formatRp.setCurrencySymbol("Rp ");
        formatRp.setMonetaryDecimalSeparator(',');
        formatRp.setGroupingSeparator('.');

        kursIndonesia.setDecimalFormatSymbols(formatRp);
        
        return kursIndonesia.format(bil);
    }
    
        public void bersihkan_Table(){
        int j_brs = mdl.getRowCount()-1;
        int i = j_brs;
        while(i>=0){
            mdl.removeRow(i);
            i=i-1;
        }
        tot_om = 0;tot_cash=0;tot_deposit=0;tot_piutang=0;
        total_trans.setText(set_Rp(tot_om));
        lbl_tunai.setText(set_Rp(tot_cash));
        lbl_deposit.setText(set_Rp(tot_deposit));
        lbl_piutang.setText(set_Rp(tot_piutang));
    }
     
     public void Update_stoknPen(){
         Date ys = new Date();
         SimpleDateFormat dt = new SimpleDateFormat("yyyy-MM-dd");
         SimpleDateFormat dt2 = new SimpleDateFormat("kk:mm:ss");
         String tgl = dt.format(ys);
         String wkt = dt2.format(ys);
         int qty,col =jTable1.getSelectedRow();
         String kd_brg, no_trans = jTable1.getModel().getValueAt(col,1).toString();
         try{
             Class.forName(JDBC_DRIVER);
             Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
             Statement smt = cn.createStatement();
             ResultSet rs = smt.executeQuery("SELECT * FROM transaksi where No_trans = '"+no_trans+"'");
             while(rs.next()){
                 kd_brg=rs.getString("Kd_brg");
                 qty = Integer.parseInt(rs.getString("Qty"));
                 update(kd_brg,qty);
             }
             smt.executeUpdate("delete from transaksi where No_trans = '"+no_trans+"'");
             smt.executeUpdate("delete from nota where No_trans = '"+no_trans+"'");
             smt.executeUpdate("insert into log_hapus (Tgl_hapus,Jam_hapus,Data_dihapus) values"
                              +"('"+tgl+"','"+wkt+"','"+"Pembatalan Transaksi dengan No.Nota: "+jTable1.getModel().getValueAt(col,1).toString()+"')");
             rs.close();
             smt.close();
             cn.close();
         } catch(Exception e){
             e.printStackTrace();
         }
     }
     
     public void update(String kd_brg, int qty){
         int stok,pen;
         
         try{
             Class.forName(JDBC_DRIVER);
             Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
             Statement smt = cn.createStatement();
             ResultSet rs = smt.executeQuery("SELECT * FROM barang where Kd_brg = '"+kd_brg+"'");
             rs.next();
             stok = qty + Integer.parseInt(rs.getString("Stok"));
             pen = Integer.parseInt(rs.getString("Penjualan"))- qty;
             smt.executeUpdate("UPDATE barang SET Stok = '"+stok+"',Penjualan = '"+pen+"' where Kd_brg = '"+kd_brg+"'");
             rs.close();
             smt.close();
             cn.close();
         } catch(Exception e){
             e.printStackTrace();
         }
     }
    public long get_sisal(String no_tr){
        long sisal=0;
        try{
             Class.forName(JDBC_DRIVER);
             Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
             Statement smt = cn.createStatement();
             ResultSet rs = smt.executeQuery("SELECT * FROM transaksi where no_trans='"+no_tr+"'");
             rs.next();
             sisal=get_saldo(rs.getString("no_deposit"));
             rs.close();
             smt.close();
             cn.close();
        } catch(Exception e){
             e.printStackTrace();
        }
        return sisal;
    }

    private long get_saldo(String no_dep) {
        long saldo=0;
        try{
             Class.forName(JDBC_DRIVER);
             Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
             Statement smt = cn.createStatement();
             ResultSet rs = smt.executeQuery("SELECT * FROM deposit where no_deposit='"+no_dep+"'");
             rs.next();
             saldo=Long.parseLong(rs.getString("saldo"));
        } catch(Exception e){
             e.printStackTrace();
        }
        return saldo;
    }

    public String get_tgljt(String no_tr) {
        String tgl="";
        try{
             Class.forName(JDBC_DRIVER);
             Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
             Statement smt = cn.createStatement();
             ResultSet rs = smt.executeQuery("SELECT * FROM transaksi where no_trans='"+no_tr+"'");
             rs.next();
             tgl=get_tanggal(rs.getString("no_piutang"));
             rs.close();
             smt.close();
             cn.close();
        } catch(Exception e){
             e.printStackTrace();
        }
        return tgl;
    }

    private String get_tanggal(String no_pi) {
        SimpleDateFormat dt = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat dt2 = new SimpleDateFormat("dd/MM/yyyy");
        String tgl="";
        try{
             Class.forName(JDBC_DRIVER);
             Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
             Statement smt = cn.createStatement();
             ResultSet rs = smt.executeQuery("SELECT * FROM piutang where no_piutang='"+no_pi+"'");
             rs.next();
             Date date = dt.parse(rs.getString("Tgl_jatuhtempo"));
             tgl=dt2.format(date);
             rs.close();
             smt.close();
             cn.close();
        } catch(Exception e){
             e.printStackTrace();
        }
        return tgl;
    }

    private void Update_salde(String no_depo, String depo) {
        long trans_depo=Long.parseLong(depo);
         
        try{
             Class.forName(JDBC_DRIVER);
             Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
             Statement smt = cn.createStatement();
             ResultSet rs = smt.executeQuery("SELECT * FROM deposit where no_deposit='"+no_depo+"'");
             rs.next();
             long saldo = Long.parseLong(rs.getString("Saldo"))+trans_depo;
             smt.executeUpdate("UPDATE deposit SET Saldo = '"+saldo+"' where no_deposit = '"+no_depo+"'");
             rs.close();
             smt.close();
             cn.close();
        } catch(Exception e){
             e.printStackTrace();
            }
     }

    private int cek_piutang(String no_pi) {
        long byr=0;
        int a=0;
        try{
             Class.forName(JDBC_DRIVER);
             Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
             Statement smt = cn.createStatement();
             ResultSet rs = smt.executeQuery("select * from pembayaran_piutang where no_piutang='"+no_pi+"'");
             while(rs.next()){
                 byr +=Long.parseLong(rs.getString("jum_byr"));
             }
             if(rs.getRow()>0){
                 String pesan="Transaksi menggunakan Piutang dan sudah dibayarkan sebesar "+set_Rp(byr)+", transaksi tidak dapat dihapus!";
                 JOptionPane.showMessageDialog(this,pesan,"Informasi",JOptionPane.INFORMATION_MESSAGE);
                 a=rs.getRow();
             }
        } catch(Exception e){
             e.printStackTrace();
            }
        return a;
                 
    }

    private String get_name(String no_pi) {
        String name="";
        try{
             Class.forName(JDBC_DRIVER);
             Connection cn = DriverManager.getConnection(DB_URL,USER,PASS);
             Statement smt = cn.createStatement();
             ResultSet rs = smt.executeQuery("select * from piutang where no_piutang='"+no_pi+"'");
             rs.next();
             name=rs.getString("nama");
        } catch(Exception e){
             e.printStackTrace();
       }
           return name;  
    }
        
}
